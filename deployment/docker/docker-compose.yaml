version: '3'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      # To connect to the PostgreSQL database run the following command
      # psql -h localhost -p 15432 -U admin -d mydb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=pressandplay
    ports:
      - "5432:5432"
    volumes:
      # Pass volume named mysql-data to mysql container
      - "postgresql-data:/var/lib/postgresql/data"

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888


  kafka1:
      image: confluentinc/cp-kafka:7.3.0
      hostname: kafka1
      container_name: kafka1
      ports:
        - "9092:9092"
        - "29092:29092"
        - "9999:9999"
      environment:
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://:19092,EXTERNAL://:9092,DOCKER://host.docker.internal:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_JMX_PORT: 9999
        KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
        KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
        KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      depends_on:
        - zoo1
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass admin
    volumes:
      - redis_data:/data

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db

  user:
    image: adarshzededa/pressandplay-user:latest
    restart: always
    ports:
      - '50010:50000'
      - '50011:50001'
    depends_on:
      - postgres
      - kafka1
      - redis
    environment:
      GRPC_SERVER_PORT: 50001
      HTTP_SERVER_HOST: "0.0.0.0"
      HTTP_SERVER_PORT: 50000
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "pressandplay"
      KAFKA_HOST: "kafka1"
      KAFKA_PORT: 9092
      KAFKA_USER_DELETE_TOPIC: "user-deleted"
      KAFKA_RETRY: 5
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: "admin"
      REDIS_DB: 0
      REDIS_DATA_EXPIRATION_IN_HRS: 5

  court:
    image: adarshzededa/pressandplay-court:latest
    restart: always
    ports:
      - '50020:50000'
      - '50021:50001'
    depends_on:
      - postgres
      - kafka1
      - redis
    environment:
#      GRPC_EVENT_CLIENT_HOST:
#      GRPC_EVENT_CLIENT_PORT:
      GRPC_USER_CLIENT_HOST: "user"
      GRPC_USER_CLIENT_PORT: 50001
      GRPC_SERVER_PORT: 50001
      HTTP_SERVER_HOST: "0.0.0.0"
      HTTP_SERVER_PORT: 50000
      GCP_PRIVATE_KEY_PATH: "resources/private-key.pem"
      GCP_BUCKET_NAME: "pressandplay"
      GCP_ACCESS_ID: "cloud-storage-object-sa@final-dsc-project.iam.gserviceaccount.com"
      GCP_IMAGE_URL_TEMPLATE: "https://storage.cloud.google.com/pressandplay/%s?authuser=6"
      GCP_CREDENTIALS_PATH: "resources/credentials.json"
      MONGO_HOST: "mongodb"
      MONGO_PORT: "27017"
      MONGO_USERNAME: "admin"
      MONGO_PASSWORD: "admin"
      MONGO_DB: "pressandplay"
      KAFKA_HOST: "kafka1"
      KAFKA_PORT: 9092
      KAFKA_COURT_DELETE_TOPIC: "court-deleted"
      KAFKA_SLOT_BOOKED_TOPIC: "slot-booked"
      KAFKA_RETRY: 5
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: "admin"
      REDIS_DB: 0
      REDIS_DATA_EXPIRATION_IN_HRS: 5


  events:
    image: adarshzededa/pressandplay-events:latest
    restart: always
    ports:
      - '50030:50000'
      - '50031:50001'
    depends_on:
      - postgres
      - kafka1
      - redis
    environment:
      GRPC_SERVER_PORT: 50001
      GRPC_COURT_CLIENT_HOST: "court"
      GRPC_COURT_CLIENT_PORT: 50001
      GRPC_USER_CLIENT_HOST: "user"
      GRPC_USER_CLIENT_PORT: 50001
      HTTP_SERVER_HOST: "0.0.0.0"
      HTTP_SERVER_PORT: "50000"
      POSTGRES_HOST: "postgres"
      POSTGRES_PORT: "5432"
      POSTGRES_USERNAME: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "pressandplay"
      KAFKA_HOST: "kafka1"
      KAFKA_PORT: 9092
      KAFKA_COURT_DELETE_TOPIC: "court-deleted"
      KAFKA_USER_DELETE_TOPIC: "user-deleted"
      KAFKA_SLOT_BOOKED_TOPIC: "slot-booked"
      KAFKA_RETRY: 5
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_PASSWORD: "admin"
      REDIS_DB: 0
      REDIS_DATA_EXPIRATION_IN_HRS: 5

# Add volumes definition to create volume mysql-data referenced above
volumes:
  postgresql-data:
    driver: local
  redis_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  postgres-network:
    driver: bridge
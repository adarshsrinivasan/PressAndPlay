// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: court.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId        string `protobuf:"bytes,1,opt,name=slotId,proto3" json:"slotId,omitempty"`
	TimeStartHHMM int32  `protobuf:"varint,2,opt,name=timeStartHHMM,proto3" json:"timeStartHHMM,omitempty"`
	TimeEndHHMM   int32  `protobuf:"varint,3,opt,name=timeEndHHMM,proto3" json:"timeEndHHMM,omitempty"`
	Booked        bool   `protobuf:"varint,4,opt,name=booked,proto3" json:"booked,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_court_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_court_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_court_proto_rawDescGZIP(), []int{0}
}

func (x *Slot) GetSlotId() string {
	if x != nil {
		return x.SlotId
	}
	return ""
}

func (x *Slot) GetTimeStartHHMM() int32 {
	if x != nil {
		return x.TimeStartHHMM
	}
	return 0
}

func (x *Slot) GetTimeEndHHMM() int32 {
	if x != nil {
		return x.TimeEndHHMM
	}
	return 0
}

func (x *Slot) GetBooked() bool {
	if x != nil {
		return x.Booked
	}
	return false
}

type CourtModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Address          *Address `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Location         string   `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Distance         float32  `protobuf:"fixed32,5,opt,name=distance,proto3" json:"distance,omitempty"`
	Phone            string   `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Rating           float32  `protobuf:"fixed32,7,opt,name=rating,proto3" json:"rating,omitempty"`
	RatingCount      int32    `protobuf:"varint,8,opt,name=ratingCount,proto3" json:"ratingCount,omitempty"`
	ManagerId        string   `protobuf:"bytes,9,opt,name=managerId,proto3" json:"managerId,omitempty"`
	AvailableSlots   []*Slot  `protobuf:"bytes,10,rep,name=availableSlots,proto3" json:"availableSlots,omitempty"`
	ImageUploadUrl   string   `protobuf:"bytes,11,opt,name=imageUploadUrl,proto3" json:"imageUploadUrl,omitempty"`
	ImageDownloadUrl string   `protobuf:"bytes,12,opt,name=imageDownloadUrl,proto3" json:"imageDownloadUrl,omitempty"`
	SportType        string   `protobuf:"bytes,13,opt,name=sportType,proto3" json:"sportType,omitempty"`
	Verified         bool     `protobuf:"varint,14,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *CourtModel) Reset() {
	*x = CourtModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_court_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourtModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtModel) ProtoMessage() {}

func (x *CourtModel) ProtoReflect() protoreflect.Message {
	mi := &file_court_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtModel.ProtoReflect.Descriptor instead.
func (*CourtModel) Descriptor() ([]byte, []int) {
	return file_court_proto_rawDescGZIP(), []int{1}
}

func (x *CourtModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CourtModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourtModel) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CourtModel) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CourtModel) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *CourtModel) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CourtModel) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CourtModel) GetRatingCount() int32 {
	if x != nil {
		return x.RatingCount
	}
	return 0
}

func (x *CourtModel) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *CourtModel) GetAvailableSlots() []*Slot {
	if x != nil {
		return x.AvailableSlots
	}
	return nil
}

func (x *CourtModel) GetImageUploadUrl() string {
	if x != nil {
		return x.ImageUploadUrl
	}
	return ""
}

func (x *CourtModel) GetImageDownloadUrl() string {
	if x != nil {
		return x.ImageDownloadUrl
	}
	return ""
}

func (x *CourtModel) GetSportType() string {
	if x != nil {
		return x.SportType
	}
	return ""
}

func (x *CourtModel) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

var File_court_proto protoreflect.FileDescriptor

var file_court_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7e, 0x0a, 0x04, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x48, 0x4d, 0x4d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x48, 0x4d,
	0x4d, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x48, 0x48, 0x4d, 0x4d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x48,
	0x48, 0x4d, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x62, 0x6f, 0x6f, 0x6b, 0x65, 0x64, 0x22, 0xb7, 0x03, 0x0a, 0x0a,
	0x43, 0x6f, 0x75, 0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x32, 0x2f, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x26,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x12, 0x0b, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x0b, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x00, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64, 0x61, 0x72, 0x73, 0x68, 0x73, 0x72, 0x69, 0x6e, 0x69,
	0x76, 0x61, 0x73, 0x61, 0x6e, 0x2f, 0x50, 0x72, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_court_proto_rawDescOnce sync.Once
	file_court_proto_rawDescData = file_court_proto_rawDesc
)

func file_court_proto_rawDescGZIP() []byte {
	file_court_proto_rawDescOnce.Do(func() {
		file_court_proto_rawDescData = protoimpl.X.CompressGZIP(file_court_proto_rawDescData)
	})
	return file_court_proto_rawDescData
}

var file_court_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_court_proto_goTypes = []interface{}{
	(*Slot)(nil),       // 0: Slot
	(*CourtModel)(nil), // 1: CourtModel
	(*Address)(nil),    // 2: Address
}
var file_court_proto_depIdxs = []int32{
	2, // 0: CourtModel.address:type_name -> Address
	0, // 1: CourtModel.availableSlots:type_name -> Slot
	1, // 2: Court.GetCourt:input_type -> CourtModel
	1, // 3: Court.GetCourt:output_type -> CourtModel
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_court_proto_init() }
func file_court_proto_init() {
	if File_court_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_court_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_court_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourtModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_court_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_court_proto_goTypes,
		DependencyIndexes: file_court_proto_depIdxs,
		MessageInfos:      file_court_proto_msgTypes,
	}.Build()
	File_court_proto = out.File
	file_court_proto_rawDesc = nil
	file_court_proto_goTypes = nil
	file_court_proto_depIdxs = nil
}
